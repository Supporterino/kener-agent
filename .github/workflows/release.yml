name: Release Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
  push:
    tags:
      - "v*.*.*"

jobs:
  # -----------------------------------
  # Job 1: Label PRs based on Conventional Commits
  # -----------------------------------
  label-prs:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Label PR based on commits
        uses: actions/github-script@v7
        with:
            github-token: ${{ secrets.REPO_TOKEN }}
            script: |
                const pr = context.payload.pull_request;
                if (!pr) return;

                const commits = await github.paginate(
                    github.rest.pulls.listCommits,
                    {
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: pr.number
                    }
                );

                let labels = [];
                for (const commit of commits) {
                    const message = commit.commit.message.toLowerCase();
                    if (message.startsWith('feat')) labels.push('feature');
                    else if (message.startsWith('fix')) labels.push('bug');
                    else if (message.startsWith('docs')) labels.push('docs');
                    else if (message.startsWith('chore')) labels.push('chore');
                    else if (message.startsWith('refactor')) labels.push('refactor');
                }

                labels = [...new Set(labels)]; // remove duplicates
                if (labels.length > 0) {
                    await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    labels: labels
                    });
                }


  # -----------------------------------
  # Job 2: Update Release Drafter draft
  # -----------------------------------
  update-draft:
    runs-on: ubuntu-latest
    needs: label-prs
    steps:
      - uses: actions/checkout@v4

      - name: Update Release Draft
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

  # -----------------------------------
  # Job 3: Build the package
  # -----------------------------------
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install build dependencies
        run: pip install build twine

      - name: Build package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  # -----------------------------------
  # Job 4: Publish to PyPI
  # -----------------------------------
  publish-pypi:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.10
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  # -----------------------------------
  # Job 5: Publish GitHub Release
  # -----------------------------------
  github-release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
